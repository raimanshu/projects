Array
➢ 1D Array
➢ 2D Array

Linked List
➢ Singly
➢ Doubly
➢ Circular
➢ Circular Doubly

Stack
➢ Array Implementation
➢ Linked List Implementation

Queue
➢ Linear
○ Array Implementation
○ Linked List Implementation
➢ Circular
○ Array Implementation
○ Linked List Implementation
➢ Priority
○ Array Implementation
○ Linked List Implementation
➢ Double Ended Queue or Dequeue
○ Array Implementation
○ Linked List Implementation

Tree
➢ Binary
➢ Binary Search
➢ AVL
➢ B
➢ B+
➢ Heap
➢ Segment
➢ Binary Indexed
➢ Suffix Array and Tree
➢ Self Balancing BSt
➢ K dimensional tree
➢ N-ary tree
➢ Trie

Graph
➢ BFS
➢ DFS
➢ Spanning

Matrix
Hashing
Disjoint Set

Others
➢ Palindromic Tree | Introduction & Implementation
➢ Ternary Search Tree
➢ Interval Tree
➢ BK-Tree | Introduction & Implementation
➢ Ropes Data Structure (Fast String Concatenation)
➢ Summed Area Table – Submatrix Summation
➢ Implement LRU Cache
➢ Sort numbers stored on different machines
➢ Substring with highest frequency length product
➢ Find whether a subarray is in form of a mountain or not
➢ Find all possible interpretations of an array of digits
➢ How to design a tiny URL or URL shortener?
➢ Design a data structure that supports insert, delete, search and getRandom in constant
time
➢ Design an efficient data structure for given operations
➢ Tournament Tree (Winner Tree) and Binary Heap
➢ Second minimum element using minimum comparisons
➢ Binomial Heap
➢ Fibonacci Heap
➢ Leftist Heap
➢ Decision Trees – Fake (Counterfeit) Coin Puzzle (12 Coin Puzzle)
➢ Spaghetti Stack
➢ Data Structure for Dictionary and Spell Checker
➢ Cartesian Tree
➢ Cartesian Tree Sorting
➢ Sparse Set
➢ Centroid Decomposition of Tree
➢ Gomory-Hu Tree