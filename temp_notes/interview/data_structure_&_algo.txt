RESOURCE - takeuforward.org
---------------------------
ARRAY 
- contiguous memory
- fixed size
- random access
- insertion and deletion is costly
- 2d array - matrix
- 3d array - cube
- 4d array - hypercube
- 5d array - hypercube
- types - single dimensional array, multi dimensional array
- operations - insertion, deletion, traversal, search, sorting, merging, splitting, reversing, rotating, shuffling, 
- sorting algorithms - bubble sort, selection sort, insertion sort, merge sort, quick sort, heap sort, counting sort, radix sort, bucket sort, shell sort, tim sort, cocktail sort, comb sort, gnome sort, pigeonhole sort, cycle sort, strand sort, bitonic sort, pancake sort, bogo sort, stooge sort, bead sort, pigeon sort
- searching algorithms - linear search, binary search, jump search, interpolation search, exponential search, fibonacci search, ternary search, polynomial search, jump search, fibonacci search, interpolation search, exponential search

LINKED LIST 
- linked list is a data structure that follows the First In First Out (FIFO) principle
- linked list is a linear data structure
- linked list is a collection of elements
- linked list is a non-primitive data structure
- operations - insertion, deletion, traversal, search, sorting, merging, splitting, reversing, rotating, shuffling
- types - single linked list, double linked list, circular linked list, doubly circular linked list
- real world examples - 

GREEDY ALGORITHM 
- greedy algorithm is an algorithm that always makes the choice that looks best at the moment


HASHING 
- prestoring and fetching 
- Hash array / frequency array 
  let hash = new Array(13).fill(0);,
- Unordered map
  const mpp = new Map();
    for (let i = 0; i < n; i++) {
    mpp.set(arr[i], (mpp.get(arr[i]) || 0) + 1);
    };
- map vs un-ordered map vs ordered map ??
- collisions - ??
- Division  method, Folding method, Mid Square method ?? 

RECUSSION
- Recursion is a method where the solution to a problem depends on solutions to smaller instances of the same problem
- types - tail recursion, head recursion, tree recursion, mutual recursion
- tail recursion - when the recursive call is the last thing executed by the function
- head recursion - when the recursive call is the first thing executed by the function
- tree recursion - when the function calls itself more than once
- mutual recursion - when two functions call each other recursively
- recursion tree - a tree where each node represents a recursive call
- base case - the condition when the recursion stops
- recursive call - the function calls itself
- recursive call stack - the stack of recursive calls
- recursive call stack frame - the frame of the recursive call

SLIDING WINDOW
- sliding window is a technique used to solve problems related to arrays and strings
- when to use - when we have a problem that involves finding the maximum or minimum of a subarray of size k


TWO POINTERS TECHNIQUE 
- two pointers is a technique used to solve problems related to arrays and strings
- where to use -


STACK 
- stack is a data structure that follows the Last In First Out (LIFO) principle
- stack is a linear data structure
- stack is a collection of elements
- stack is a non-primitive data structure
- operations - push/add, pop, peek/top, isEmpty, isFull, size, clear, print
- stack implementation using array
https://www.geeksforgeeks.org/implement-stack-using-array/
- stack implementation using linked list
https://www.geeksforgeeks.org/implement-a-stack-using-singly-linked-list/
- stack implementation using queue 
https://www.geeksforgeeks.org/implement-stack-using-queue/



QUEUE
- queue is a data structure that follows the First In First Out (FIFO) principle
- queue is a linear data structure
- queue is a collection of elements
- queue is a non-primitive data structure
- operations - enqueue/add, dequeue, peek/top, isEmpty, isFull, size, clear, print
- types - simple queue, circular queue, priority queue, double ended queue
- queue implementation using array
https://www.geeksforgeeks.org/array-implementation-of-queue-simple/
- queue implementation using linked list
https://www.geeksforgeeks.org/queue-linked-list-implementation/
- queue implementation using stack
https://www.geeksforgeeks.org/queue-using-stacks/



BINARY TREE



BINARY SEARCH
- when to use - all the entries must be  sorted
- real life example - searching for a book in a library, searching for a person in a phone book, searching for a word in a dictionary
- binary search is a search algorithm that finds the position of a target value within a sorted array
- binary search is a divide and conquer algorithm
- binary search is a recursive algorithm
- binary search is a logarithmic time complexity algorithm




HEAP
- heap is a data structure that follows the Heap property
- heap is a binary tree
- heap is a complete binary tree
- heap is a binary tree where the value of each node is greater than or equal to the value of its children
- heap is a binary tree where the value of each node is less than or equal to the value of its children



TREE
- Binary Tree (can have max two nodes)
- terminologies -root node, children, parent, leaf node, ancestor, sibling, sub-tree, level, height, depth, degree of a node, degree of a tree
- types - full binary tree, complete binary tree, perfect binary tree, balanced binary tree, degenerate tree, skewed tree
- full binary tree - every node has either 0 or 2 children
- complete binary tree - all levels are completely filled except possibly the last level and the last level has all keys as left as possible
- perfect binary tree - all internal nodes have two children and all leaves are at the same level
- balanced binary tree - height of the tree is O(logN)
- degenerate tree - every node has only one child
- Traversal in a tree - BFS & DFS(inorder, preorder, postorder)



GRAPH
------
- terminologies - nodes/vertices, edge, directed edge, undirected edge, cycle of a graph, 
- types - directed graph, undirected graph, weighted graph, unweighted graph, connected graph, disconnected graph, cyclic graph, acyclic graph, complete graph, regular graph, complete bipartite graph, planar graph, multigraph, pseudograph, simple graph
- directed graph - edges have direction
- undirected graph - edges have no direction
- weighted graph - edges have weight
- unweighted graph - edges have no weight
- connected graph - every node is reachable from every other node
- disconnected graph - 
- cyclic graph -
- acyclic graph -
- complete graph -
- regular graph -
- complete bipartite graph -
- planar graph -
- multigraph -
- pseudograph - 
- simple graph -





DYNAMIC PROGRAMMING
- techniques - memoization, tabulation
- memoization - technique of storing the solution of a subproblem, so that we do not have to recompute it when needed later.
- tabulation - 
- types - top-down, bottom-up
- memoization - top-down
- tabulation - bottom up 
- overlapping subproblems - when a subproblem is called multiple times 
- optimal substructure - when an optimal solution can be constructed from optimal solutions of its subproblems
- 

