Javascript methods


Array.length - The Array constructor's length property whose value is 1.
get Array[@@species] - The constructor function that is used to create derived objects.
Array.prototype - Allows the addition of properties to all array objects.
Array.from() - Creates a new Array instance from an array-like or iterable object.
Array.isArray() - Returns true if a variable is an array, if not false.
Array.of() - Creates a new Array instance with a variable number of arguments, regardless of number or type of the arguments.
Array.copyWithin() - Copies a sequence of array elements within the array.
Array.prototype.fill() - Fills all the elements of an array from a start index to an end index with a static value.
Array.pop() - Removes the last element from an array and returns that element.
Array.push() - Adds one or more elements to the end of an array and returns the new length of the array.
Array.reverse() - Reverses the order of the elements of an array in place â€” the first becomes the last, and the last becomes the first.
Array.shift() - Removes the first element from an array and returns that element.
Array.sort() - Sorts the elements of an array in place and returns the array.
Array.splice() - Adds and/or removes elements from an array.
Array.unshift() - Adds one or more elements to the front of an array and returns the new length of the array.
Array.concat() - Returns a new array that is this array joined with other array(s) and/or value(s).
Array.includes() - Determines whether an array contains a certain element, returning true or false as appropriate.
Array.indexOf() - Returns the first (least) index of an element within the array equal to the specified value, or -1 if none is 
found.
Array.join() - Joins all elements of an array into a string.
Array.lastIndexOf() - Returns the last (greatest) index of an element within the array equal to the specified value, or -1 if none is found.
Array.slice() - Extracts a section of an array and returns a new array.
Array.toString() - Returns a string representing the array and its elements. Overrides the Object.prototype.toString() method.
Array.toLocaleString() - Returns a localized string representing the array and its elements. Overrides the Object.prototype.toLocaleString() method.
Array.entries() - Returns a new Array Iterator object that contains the key/value pairs for each index in the array.
Array.every() - Returns true if every element in this array satisfies the provided testing function.
Array.filter() - Creates a new array with all of the elements of this array for which the provided filtering function returns true.
Array.find() - Returns the found value in the array, if an element in the array satisfies the provided testing function or undefined if not found.Array.findIndex() - Returns the found index in the array, if an element in the array satisfies the provided testing function or -1 if not found.
Array.forEach() - Calls a function for each element in the array.
Array.keys() - Returns a new Array Iterator that contains the keys for each index in the array.
Array.map() - Creates a new array with the results of calling a provided function on every element in this array.
Array.reduce() - Apply a function against an accumulator and each value of the array (from left-to-right) as to reduce it to a single value.
Array.reduceRight() - Apply a function against an accumulator and each value of the array (from right-to-left) as to reduce it to a single value.
Array.some() - Returns true if at least one element in this array satisfies the provided testing function.
Array.values() - Returns a new Array Iterator object that contains the values for each index in the array.
Array.prototype[@@iterator]() - Returns a new Array Iterator object that contains the values for each index in the array.

Strings
String.prototype - Allows the addition of properties to a String object.
String.fromCharCode() - Returns a string created by using the specified sequence of Unicode values.
String.fromCodePoint() - Returns a string created by using the specified sequence of code points.
String.charAt() - Returns the character (exactly one UTF-16 code unit) at the specified index.
String.charCodeAt() - Returns a number that is the UTF-16 code unit value at the given index.
String.codePointAt() - Returns a nonnegative integer Number that is the code point value of the UTF-16 encoded code point starting at the specified index.
String.concat() - Combines the text of two strings and returns a new string.
String.includes() - Determines whether one string may be found within another string.
String.endsWith() - Determines whether a string ends with the characters of another string.
String.indexOf() - Returns the index within the calling String object of the first occurrence of the specified value, or -1 if not found.
String.lastIndexOf() - Returns the index within the calling String object of the last occurrence of the specified value, or -1 if not found.
String.localeCompare() - Returns a number indicating whether a reference string comes before or after or is the same as the given 
string in sort order.
String.match() - Used to match a regular expression against a string.
String.matchAll() - Returns an iterator of all matches.
String.normalize() - Returns the Unicode Normalization Form of the calling string value.
String.padEnd() - Pads the current string from the end with a given string to create a new string from a given length.
String.padStart() - Pads the current string from the start with a given string to create a new string from a given length.
String.repeat() - Returns a string consisting of the elements of the object repeated the given times.
String.replace() - Used to find a match between a regular expression and a string, and to replace the matched substring with a new substring.
String.search() - Executes the search for a match between a regular expression and a specified string.
String.slice() - Extracts a section of a string and returns a new string.
String.split() - Splits a String object into an array of strings by separating the string into substrings.
String.startsWith() - Determines whether a string begins with the characters of another string.
String.substring() - Returns the characters in a string between two indexes into the string.
String.toLocaleLowerCase() - The characters within a string are converted to lower case while respecting the current locale. For most languages, this will return the same as toLowerCase().
String.toLocaleUpperCase() - The characters within a string are converted to upper case while respecting the current locale. For most languages, this will return the same as toUpperCase().
String.toLowerCase() - Returns the calling string value converted to lower case.
String.toString() - Returns a string representing the specified object. Overrides the Object.toString() method.
String.toUpperCase() - Returns the calling string value converted to uppercase.
String.trim() - Trims whitespace from the beginning and end of the string. Part of the ECMAScript 5 standard.
String.trimStart()
String.trimLeft() - Trims whitespace from the beginning of the string.
String.trimEnd()
String.trimRight() - Trims whitespace from the end of the string.
String.valueOf() - Returns the primitive value of the specified object. Overrides the Object.valueOf() method.
String.prototype[@@iterator]() - Returns a new Iterator object that iterates over the code points of a String value, returning each code point as a String value.
substr(start, length)



